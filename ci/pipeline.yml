---
resource_types:
- name: pipeline
  type: docker-image
  source:
    repository: concourse/concourse-pipeline-resource

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: this-pipeline
  type: pipeline
  source:
    target: https://ci.engineerbetter.com
    insecure: "true"
    teams:
    - name: main
      username: admin
      password: ((atc_main_password))
- name: image-source
  type: git
  source:
    uri: https://github.com/EngineerBetter/concourse-up.git
    branch: master
    paths: [ci/docker/*]

- name: concourse-up
  type: git
  source:
    uri: git@github.com:EngineerBetter/concourse-up.git
    branch: master
    ignore_paths: [ci/docker/*, README.md, compilation-vars.json]
    private_key: ((github_private_key))

- name: image
  type: docker-image
  source:
    repository: engineerbetter/cup-image
    username: ((dockerhub_user))
    password: ((dockerhub_password))

- name: version
  type: semver
  source:
    initial_version: 0.0.0
    driver: s3
    bucket: concourse-up-ci-artifacts
    key: version
    access_key_id: ((concourse_ci_s3_access_key))
    secret_access_key: ((concourse_ci_s3_secret_key))
    region_name: eu-west-1

- name: compilation-vars
  type: s3
  source:
    bucket: concourse-up-ci-artifacts
    versioned_file: compilation-vars.json
    access_key_id: ((concourse_ci_s3_access_key))
    secret_access_key: ((concourse_ci_s3_secret_key))
    region_name: eu-west-1

- name: binary-linux
  type: s3
  source:
    bucket: concourse-up-ci-artifacts
    versioned_file: concourse-up-linux-amd64
    access_key_id: ((concourse_ci_s3_access_key))
    secret_access_key: ((concourse_ci_s3_secret_key))
    region_name: eu-west-1

- name: binary-darwin
  type: s3
  source:
    bucket: concourse-up-ci-artifacts
    versioned_file: concourse-up-darwin-amd64
    access_key_id: ((concourse_ci_s3_access_key))
    secret_access_key: ((concourse_ci_s3_secret_key))
    region_name: eu-west-1

- name: binary-windows
  type: s3
  source:
    bucket: concourse-up-ci-artifacts
    versioned_file: concourse-up-darwin-amd64
    access_key_id: ((concourse_ci_s3_access_key))
    secret_access_key: ((concourse_ci_s3_secret_key))
    region_name: eu-west-1

- name: release
  type: github-release
  source:
    user: engineerbetter
    repository: concourse-up
    access_token: ((github_access_token))

- name: release-drafts
  type: github-release
  source:
    user: engineerbetter
    repository: concourse-up
    access_token: ((github_access_token))
    drafts: true

- name: concourse-github-release
  type: github-release
  source:
    user: concourse
    repository: concourse
    access_token: ((github_access_token))

- name: concourse-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: director-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: concourse-release
  type: bosh-io-release
  source:
    repository: concourse/concourse

- name: director-bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh

- name: director-bosh-cpi-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bosh-aws-cpi-release

- name: riemann-release
  type: bosh-io-release
  source:
    repository: xoebus/riemann-boshrelease

- name: influxdb-release
  type: bosh-io-release
  source:
    repository: vito/influxdb-boshrelease

- name: grafana-release
  type: bosh-io-release
  source:
    repository: vito/grafana-boshrelease

- name: uaa-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/uaa-release

- name: credhub-release
  type: bosh-io-release
  source:
    repository: pivotal-cf/credhub-release

- name: garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack_webhook))

jobs:
- name: build-image
  public: false
  plan:
  - get: image-source
    trigger: true
  - put: image
    params:
      build: image-source/ci/docker

- name: set-pipeline
  plan:
  - get: concourse-up
    trigger: true
  - put: this-pipeline
    params:
      pipelines:
      - name: concourse-up
        team: main
        config_file: concourse-up/ci/pipeline.yml

- name: unit-tests
  plan:
  - aggregate:
    - get: image
      passed: [build-image]
    - get: concourse-up
      trigger: true
      passed: [set-pipeline]
  - task: lint
    image: image
    file: concourse-up/ci/tasks/lint.yml
    on_failure:
      put: slack-alert
      params:
        channel: "#integrations"
        text: |
          <!channel> Concourse Up lint failure!
  - task: unit-test
    image: image
    file: concourse-up/ci/tasks/unit-test.yml
    params:
      AWS_ACCESS_KEY_ID: ((concourse_up_test_access_key_id))
      AWS_SECRET_ACCESS_KEY: ((concourse_up_test_secret_key))
      AWS_DEFAULT_REGION: ((aws_default_region))
    on_failure:
      put: slack-alert
      params:
        channel: "#integrations"
        text: |
          <!channel> Concourse Up unit tests failure!

- name: compile-releases
  serial: true
  plan:
  - get: version
  - get: image
    passed: [build-image]
  - get: concourse-github-release
    trigger: true
  - get: concourse-stemcell
    trigger: true
  - get: director-stemcell
    trigger: true
  - get: concourse-release
    trigger: true
  - get: director-bosh-release
    trigger: true
  - get: riemann-release
    trigger: true
  - get: grafana-release
    trigger: true
  - get: influxdb-release
    trigger: true
  - get: director-bosh-cpi-release
    trigger: true
  - get: uaa-release
    trigger: true
  - get: credhub-release
    trigger: true
  - get: garden-runc-release
    trigger: true
  - get: concourse-up
  - task: compile
    file: concourse-up/ci/tasks/compile-bosh-releases.yml
    params:
      AWS_ACCESS_KEY_ID: ((concourse_up_test_access_key_id))
      AWS_SECRET_ACCESS_KEY: ((concourse_up_test_secret_key))
      AWS_DEFAULT_REGION: ((aws_default_region))
      BOSH_USERNAME: ((bosh_username))
      BOSH_PASSWORD: ((bosh_password))
      BOSH_TARGET: ((bosh_target))
      BOSH_CA_CERT: ((bosh_ca_cert))
      PUBLIC_ARTIFACTS_BUCKET: concourse-up-public-artifacts
  - put: compilation-vars
    params:
      file: compilation-vars/compilation-vars.json
  - put: version
    params:
      file: version/version

- name: build
  plan:
  - aggregate:
    - get: image
      passed: [unit-tests]
    - get: concourse-up
      trigger: true
      passed: [unit-tests]
    - get: compilation-vars
      trigger: true
      passed: [compile-releases]
    - get: version
      passed: [compile-releases]
  - aggregate:
    - do:
      - task: build-linux
        image: image
        params:
          GOOS: linux
          GOARCH: amd64
          OUTPUT_FILE: concourse-up-linux-amd64
        file: concourse-up/ci/tasks/build_linux.yml
      - put: binary-linux
        params:
          file: build-linux/concourse-up-linux-amd64
    - do:
      - task: build-darwin
        image: image
        params:
          GOOS: darwin
          GOARCH: amd64
          OUTPUT_FILE: concourse-up-darwin-amd64
        file: concourse-up/ci/tasks/build_darwin.yml
      - put: binary-darwin
        params:
          file: build-darwin/concourse-up-darwin-amd64
    - do:
      - task: build-windows
        image: image
        params:
          GOOS: windows
          GOARCH: amd64
          OUTPUT_FILE: concourse-up-windows-amd64.exe
        file: concourse-up/ci/tasks/build_windows.yml
      - put: binary-windows
        params:
          file: build-windows/concourse-up-windows-amd64.exe

- name: system-test
  serial: true
  plan:
  - aggregate:
    - get: version
      passed: [build]
    - get: compilation-vars
      trigger: true
      passed: [build]
    - get: binary-linux
      trigger: true
      passed: [build]
    - get: binary-darwin
      trigger: true
      passed: [build]
    - get: binary-windows
      trigger: true
      passed: [build]
    - get: concourse-up
      trigger: true
      passed: [build]
    - get: image
      passed: [build]
    - get: release
      params:
        globs: [concourse-up-linux-amd64]
  - aggregate:
    # - task: system-test-alt-region
    #   file: concourse-up/ci/tasks/system-test-alt-region.yml
    #   params:
    #     AWS_ACCESS_KEY_ID: ((concourse_up_test_access_key_id))
    #     AWS_SECRET_ACCESS_KEY: ((concourse_up_test_secret_key))
    #     BINARY_PATH: binary-linux/concourse-up-linux-amd64
    #   on_failure:
    #     put: slack-alert
    #     params:
    #       channel: "#integrations"
    #       text: |
    #         <!channel> Concourse Up alt region system test failure!
    - task: system-test-update
      file: concourse-up/ci/tasks/system-test-update.yml
      params:
        AWS_ACCESS_KEY_ID: ((concourse_up_test_access_key_id))
        AWS_SECRET_ACCESS_KEY: ((concourse_up_test_secret_key))
        BINARY_PATH: binary-linux/concourse-up-linux-amd64
        SKIP_TEARDOWN: true
      on_failure:
        put: slack-alert
        params:
          channel: "#integrations"
          text: |
            <!channel> Concourse Up self update system test failure!
    # - task: system-test
    #   file: concourse-up/ci/tasks/system-test.yml
    #   params:
    #     AWS_ACCESS_KEY_ID: ((concourse_up_test_access_key_id))
    #     AWS_SECRET_ACCESS_KEY: ((concourse_up_test_secret_key))
    #     BINARY_PATH: binary-linux/concourse-up-linux-amd64
    #   on_failure:
    #     put: slack-alert
    #     params:
    #       channel: "#integrations"
    #       text: |
    #         <!channel> Concourse Up system test failure!
    # - task: system-test-credhub
    #   file: concourse-up/ci/tasks/system-test-credhub.yml
    #   params:
    #     AWS_ACCESS_KEY_ID: ((concourse_up_test_access_key_id))
    #     AWS_SECRET_ACCESS_KEY: ((concourse_up_test_secret_key))
    #     BINARY_PATH: binary-linux/concourse-up-linux-amd64
    #   on_failure:
    #     put: slack-alert
    #     params:
    #       channel: "#integrations"
    #       text: |
    #         <!channel> Concourse Up system credhub test failure!
    # - task: system-test-letsencrypt
    #   file: concourse-up/ci/tasks/system-test-autocert.yml
    #   attempts: 2
    #   params:
    #     AWS_ACCESS_KEY_ID: ((concourse_up_test_access_key_id))
    #     AWS_SECRET_ACCESS_KEY: ((concourse_up_test_secret_key))
    #     BINARY_PATH: binary-linux/concourse-up-linux-amd64
    #   on_failure:
    #     put: slack-alert
    #     params:
    #       channel: "#integrations"
    #       text: |
    #         <!channel> Concourse Up system letsencrypt test failure!

- name: commit-compilation-vars
  serial: true
  plan:
  - aggregate:
    - get: version
      passed: [system-test]
    - get: compilation-vars
      trigger: true
      passed: [system-test]
    - get: binary-linux
      trigger: true
      passed: [system-test]
    - get: binary-darwin
      trigger: true
      passed: [system-test]
    - get: binary-windows
      trigger: true
      passed: [system-test]
    - get: concourse-up
      trigger: true
      passed: [system-test]
    - get: image
      passed: [system-test]
  - task: copy-compilation-vars
    image: image
    file: concourse-up/ci/tasks/copy-compilation-vars.yml
  - put: concourse-up
    params:
      repository: concourse-up-new
      rebase: true
      notes: "update compilation vars"

- name: auto
  serial: true
  plan:
  - aggregate:
    - get: compilation-vars
      trigger: true
      passed: [commit-compilation-vars]
    - get: image
      passed: [commit-compilation-vars]
    - get: concourse-up
      passed: [commit-compilation-vars]
    - get: version
      passed: [commit-compilation-vars]
      params:
        bump: patch
  - aggregate: &build_binaries
    - task: build-linux
      image: image
      params:
        GOARCH: amd64
        OUTPUT_FILE: concourse-up-linux-amd64
      file: concourse-up/ci/tasks/build_linux_from_version_file.yml
    - task: build-darwin
      image: image
      params:
        GOARCH: amd64
        OUTPUT_FILE: concourse-up-darwin-amd64
      file: concourse-up/ci/tasks/build_darwin_from_version_file.yml
    - task: build-windows
      image: image
      params:
        GOARCH: amd64
        OUTPUT_FILE: concourse-up-windows-amd64.exe
      file: concourse-up/ci/tasks/build_windows_from_version_file.yml
  - task: write-release-vars
    image: image
    file: concourse-up/ci/tasks/write-release-vars.yml
  - put: release
    params:
      name: release-vars/name
      commitish: release-vars/commit
      body: release-vars/body
      tag: version/version
      globs:
      - build-linux/concourse-up-linux-amd64
      - build-darwin/concourse-up-darwin-amd64
      - build-windows/concourse-up-windows-amd64.exe
  - put: version
    resource: version
    params:
      file: version/version
  - put: slack-alert
    params:
      channel: "#integrations"
      text: |
        <!channel> Concourse Up $TEXT_FILE_CONTENT published to Github
      text_file: version/version

- name: patch
  serial: true
  plan:
  - aggregate:
    - get: compilation-vars
      passed: [commit-compilation-vars]
    - get: version
      params:
        bump: patch
    - get: image
      passed: [commit-compilation-vars]
    - get: concourse-up
      passed: [commit-compilation-vars]
  - aggregate: *build_binaries
  - task: write-release-vars
    image: image
    file: concourse-up/ci/tasks/write-release-vars.yml
  - put: release-drafts
    params:
      name: release-vars/name
      commitish: release-vars/commit
      body: concourse-up/ci/release/body
      tag: version/version
      globs:
      - build-linux/concourse-up-linux-amd64
      - build-darwin/concourse-up-darwin-amd64
      - build-windows/concourse-up-windows-amd64.exe
  - put: version
    resource: version
    params:
      file: version/version
  - put: slack-alert
    params:
      channel: "#integrations"
      text: |
        <!channel> Concourse Up $TEXT_FILE_CONTENT published to Github
      text_file: version/version

- name: minor
  serial: true
  plan:
  - aggregate:
    - get: compilation-vars
      passed: [commit-compilation-vars]
    - get: version
      params:
        bump: minor
    - get: image
      passed: [commit-compilation-vars]
    - get: concourse-up
      passed: [commit-compilation-vars]
  - aggregate: *build_binaries
  - task: write-release-vars
    image: image
    file: concourse-up/ci/tasks/write-release-vars.yml
  - put: release-drafts
    params:
      name: release-vars/name
      commitish: release-vars/commit
      body: concourse-up/ci/release/body
      tag: version/version
      globs:
      - build-linux/concourse-up-linux-amd64
      - build-darwin/concourse-up-darwin-amd64
      - build-windows/concourse-up-windows-amd64.exe
  - put: version
    resource: version
    params:
      file: version/version
  - put: slack-alert
    params:
      channel: "#integrations"
      text: |
        <!channel> Concourse Up $TEXT_FILE_CONTENT published to Github
      text_file: version/version

- name: major
  serial: true
  plan:
  - aggregate:
    - get: compilation-vars
      passed: [commit-compilation-vars]
    - get: version
      params:
        bump: major
    - get: image
      passed: [commit-compilation-vars]
    - get: concourse-up
      passed: [commit-compilation-vars]
  - aggregate: *build_binaries
  - task: write-release-vars
    image: image
    file: concourse-up/ci/tasks/write-release-vars.yml
  - put: release-drafts
    params:
      name: release-vars/name
      commitish: release-vars/commit
      body: concourse-up/ci/release/body
      tag: version/version
      globs:
      - build-linux/concourse-up-linux-amd64
      - build-darwin/concourse-up-darwin-amd64
      - build-windows/concourse-up-windows-amd64.exe
  - put: version
    resource: version
    params:
      file: version/version
  - put: slack-alert
    params:
      channel: "#integrations"
      text: |
        <!channel> Concourse Up $TEXT_FILE_CONTENT published to Github
      text_file: version/version
