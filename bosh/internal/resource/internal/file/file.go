// Code generated by go-bindata.
// sources:
// ../../../../concourse-up-ops/README.md
// ../../../../concourse-up-ops/director/aws/cpi.yml
// ../../../../concourse-up-ops/director/custom-ops.yml
// ../../../../concourse-up-ops/director/external-ip.yml
// ../../../../concourse-up-ops/director/manifest.yml
// ../../../../concourse-up-ops/director-versions.json
// ../../../../concourse-up-ops/manifest.yml
// ../../../../concourse-up-ops/ops/shas.json
// ../../../../concourse-up-ops/ops/versions.json
// DO NOT EDIT!

package file

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x48\xce\xcf\x4b\xce\x2f\x2d\x2a\x4e\xd5\x2d\x2d\xd0\xcd\x2f\x28\xe6\xe2\x0a\x2e\x2d\x28\xc8\x2f\x2a\xc9\xcc\x4b\x57\x48\xcb\xcc\x49\x2d\x56\x48\xcb\x2f\x52\x70\x46\x52\xc6\x05\x08\x00\x00\xff\xff\xa9\x11\x12\x1e\x36\x00\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _directorAwsCpiYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x4f\x6b\xfb\x38\x10\xbd\xfb\x53\x0c\x14\x7e\x24\x85\xc4\x69\xd8\x25\x60\x58\x96\x52\xf6\xb0\xb7\x85\x3d\xec\x51\x8c\xed\x69\xa2\x56\xb1\xc4\x8c\xec\x6c\xfa\xe9\x17\xd9\x52\xfe\xb8\x75\xba\xa5\xbf\x9b\x35\x63\xbd\xf7\x46\xf3\x34\x5a\x80\x3f\x3a\x2a\x80\xc9\x19\xac\x28\x03\x70\xe8\x77\x05\xe4\x4c\x86\x50\x48\xf2\x45\x06\xd0\xa1\x69\xa9\xc8\x00\x00\x1a\xdc\x53\x01\xa5\x95\xdd\x02\x0f\xb2\xa8\x9c\xee\xc3\x1d\xb1\x68\xdb\x14\x30\x9b\x55\x4e\xab\xb8\x9c\xcf\xfb\x64\xcb\x26\x25\x5a\x36\x31\x28\x3b\x7c\x48\xd1\xf0\x3d\x9f\x67\xd9\x0d\x35\x62\x5b\xae\x48\x39\x6b\x8d\xe4\x41\xc4\x6f\xdd\x5e\x72\xf1\xb4\xaf\xc8\x98\xdf\xaf\x45\x46\xc2\x94\xfd\x80\xf5\x94\x4a\xd4\x77\xf0\x64\x9b\x67\xbd\x6d\x99\xe0\xf1\x9f\xbf\x41\xf4\x1b\xc9\xd7\x05\x55\xc6\xb6\xb5\x72\x6c\x1d\xb1\xd7\x24\x23\x61\xba\x11\x8f\x4d\x45\x6a\x80\xdd\xff\xb2\xfc\xd7\x20\x6f\xa9\x4f\x92\xdb\xd1\x9e\x18\x8d\xaa\xb5\xbc\x0e\x1b\x20\x0a\xd8\xba\x75\x5c\x07\x61\x05\xac\x7f\x55\xab\xd5\xaa\x0f\x61\x87\xda\x60\xa9\x8d\xf6\x47\xf5\x66\x1b\x0a\xf5\xe1\xdb\xcd\xf3\x0c\x04\x97\xd2\xc3\xfa\x53\xf1\x67\x25\xd3\xc0\x0d\xf9\x83\xe5\xd7\x04\x4b\xcf\xd8\x1a\x9f\x4b\x5b\x36\xe4\x25\x5f\x7d\x46\x31\xfc\xd8\x37\xa8\xff\x52\xba\x1e\x9a\xf3\x47\x83\xa5\x21\x60\xda\x6a\xf1\x7c\x84\x17\x5b\x4e\x8b\x38\x9d\xf2\x96\x6d\xeb\xa2\x96\x60\xd9\xfc\xc5\x96\x13\x8e\x4e\xc8\x7d\x28\x9a\x7f\xf0\xf9\x8d\x6a\xa7\x89\xce\x15\xe6\x09\x79\x54\x2a\xd6\x35\x93\x48\xa8\x55\x37\x9e\xb8\x41\xa3\xb4\x8b\x36\xdd\x59\xf1\x1f\x67\xea\xb2\x80\x3b\xf0\xb6\xb6\xc0\xb4\xb7\x1d\x45\x5b\x0c\x3b\x1e\xd6\x9b\xe5\x6a\xb9\x5a\x3e\xc4\x68\x2b\xc4\x05\x38\x2b\x7e\xcb\x24\x31\xe8\x50\xe4\x60\xb9\x0e\x04\x29\xa5\x52\x30\xd2\x00\xd4\xe8\xb1\x3c\x1f\xc2\x10\xc4\x1a\x9d\x7f\x07\xb9\xf3\xde\x15\x57\x8c\x57\xa7\x79\xcd\x98\x52\xef\x19\x9d\x65\x1f\x9c\xbd\xd9\x6c\xb2\x04\xf5\x41\x73\xfe\x0f\xd8\x25\x54\x76\x07\x8f\x75\x0d\x4f\x7f\xfd\xf9\x93\x5c\x03\x3f\xc2\xcc\x0a\x58\x67\xfb\xe0\x41\x54\x9a\x85\x57\xee\x39\x4d\xc9\x6f\xba\xa8\xd6\x4c\x95\xb7\x9c\x47\xee\xb3\x9b\x4e\xdc\xd3\x0c\xa7\x5b\xd7\xe9\x9a\x38\xf7\xb4\x77\x06\x3d\x5d\x60\xdc\xa7\x92\xbe\x29\x13\x0f\x17\x57\x1a\x7e\xe0\x61\x70\x08\x56\x15\x89\xa8\x57\x3a\x2a\xdd\x37\xee\x2a\x90\x66\x33\x55\x4c\x5e\x9d\x53\xfd\x1c\x18\x07\xd3\x3d\x18\x46\x4b\x8f\x30\xb4\x60\x36\x1b\xc7\x46\xbf\x0a\x55\x2d\x87\x21\x39\x14\x70\xb9\x63\x94\x8a\x1b\x83\xbb\x86\x37\x6d\xf8\xba\x39\x52\x47\x67\x2c\xb2\x53\xbe\x6d\x1a\x1a\xbf\x4d\xd3\x57\x3b\x9a\x76\x9d\x9d\xef\x51\x57\xa1\x1b\x72\xac\x3b\xf4\x94\x4e\xe5\x62\xf9\x15\x51\x93\x8d\xba\x0f\x8d\x9a\x86\xe9\x90\x75\x98\xbf\x9f\xcc\xce\xd3\x2d\xbc\x78\x2e\x4e\xa1\xff\x02\x00\x00\xff\xff\x52\xb9\x6e\xa4\x6a\x08\x00\x00")

func directorAwsCpiYmlBytes() ([]byte, error) {
	return bindataRead(
		_directorAwsCpiYml,
		"director/aws/cpi.yml",
	)
}

func directorAwsCpiYml() (*asset, error) {
	bytes, err := directorAwsCpiYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "director/aws/cpi.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _directorCustomOpsYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x55\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x74\xac\x0f\xad\xb3\x66\x97\x05\x18\xf6\x29\x02\x25\x11\x89\x16\xdb\x14\x48\xda\x59\xf6\xf5\x83\x14\xdb\x71\x3b\xa4\xd8\xea\x9e\x7a\x93\x9e\xa8\xf7\xf8\x44\x9a\x7e\x34\x7a\x49\xb8\x37\x8c\xa9\x01\x8f\x1b\x63\x12\xe8\x71\x6f\xea\x10\xe5\x64\x13\x51\x23\x75\x07\x2d\x7e\xcf\x7b\xb9\xa2\x12\x7f\xe7\xc0\x01\x9a\x1e\xf7\xe6\x79\xbb\xdd\x6e\x37\x9b\xbb\x44\xb1\x13\x85\xce\xa3\x3d\x30\xf5\x69\x64\x73\x24\xc7\x3a\x31\x25\x64\x8d\x28\xb5\x6b\xc8\x89\x12\xdf\x78\x37\xc6\x18\x03\xde\xa3\x88\x3d\xe1\xc5\xc6\xb0\x37\x0f\x0f\xb2\xb3\x70\x16\xfb\x02\xaf\xaa\x12\xeb\x7a\x7f\x42\xb5\x99\x3e\x47\xce\x8c\xf6\x7a\x30\x46\x25\xa6\x21\x06\xe4\xbd\x91\x5d\x01\x64\x67\x19\x0f\x91\xba\x7c\xe9\xba\x1a\x43\x05\x3d\xa3\x2e\xb4\x16\x09\xfc\x75\x56\x55\x6b\x9f\x20\x44\x46\xaf\xc4\x75\x70\xaf\x1e\x21\x40\xd2\x9c\x71\x22\xd1\x03\xa3\x14\x34\x80\x82\x03\x29\x5e\x83\x2b\xb6\xc7\xbc\x8f\x24\x3a\xa2\x79\x39\x19\x07\x91\x33\x71\x18\x4f\xa6\xed\x74\x4a\x3c\xdd\xc9\xcb\x11\xed\x25\xcb\x16\x34\x2f\x47\x8d\x8f\xf2\xd9\xc2\x2f\xab\x47\x46\x08\xf2\xe3\xd6\x4e\x5f\x56\xf7\xd2\x2c\xa0\xdc\x8b\x62\xb0\x1e\x59\x97\x12\xc5\x90\x87\x82\xaf\xf7\xb3\xa8\xca\xe7\x2d\x5a\xfe\x30\x44\xf9\xf2\xd9\x9b\x73\xf6\x79\x54\x4d\x75\xe6\xbd\xb5\x0d\x84\x36\x76\x1f\x26\x30\xe5\xfc\xef\xfc\x8c\x42\x3d\x7b\x5c\x4e\xe5\xa1\x95\xda\x37\xd4\x07\xbb\xd0\x98\x13\xc9\x44\x37\x7e\x7d\x7e\x92\x16\x9a\x66\x29\xd1\xd2\xf0\xbf\x0e\xe0\x80\x9d\xd6\xd8\x0d\xf7\x79\x06\xe0\x08\xae\xc1\x89\x61\x1e\xc5\x1e\xde\x71\x49\x90\x07\x64\xab\x8d\xbc\x27\xf3\x9f\xe4\xc6\xed\xd4\xa1\x8f\xdf\x9e\xbe\xae\x63\xba\xfd\xad\xee\xd2\xcc\x45\x29\x7f\x9b\x3a\x8f\x9a\xfb\xc1\xf7\x2a\x8b\xdd\x50\x17\xe9\xd6\xf5\x6f\x98\x7f\xf5\x72\x39\xd8\x3a\x22\x15\x65\x48\x56\x64\x6d\xc5\xe7\x81\x7a\x26\x3e\x21\xcb\x1b\x3d\xaa\x70\x78\x39\x69\x33\x50\x55\x9b\x3f\x01\x00\x00\xff\xff\xfd\x07\xfb\x75\x67\x08\x00\x00")

func directorCustomOpsYmlBytes() ([]byte, error) {
	return bindataRead(
		_directorCustomOpsYml,
		"director/custom-ops.yml",
	)
}

func directorCustomOpsYml() (*asset, error) {
	bytes, err := directorCustomOpsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "director/custom-ops.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _directorExternalIpYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xd1\xca\xdb\x30\x0c\x85\xef\xf3\x14\x82\xdd\x24\xb0\xe2\x5d\xfd\x14\xc3\xe8\xde\xa3\x0c\xa3\xd8\x6a\x63\xe6\x5a\xc6\x92\xd3\xf5\xed\x47\xba\x76\x1d\x81\xae\xd0\x5d\x05\x44\x7c\xbe\xf3\xc9\xde\x80\x5e\x0a\x59\xa8\x54\x12\x7a\xea\x00\x0a\xea\x64\xc1\x64\xd2\x33\xd7\x1f\x62\x36\x1d\xc0\x8c\xa9\x91\xed\x00\x00\x32\x9e\xc8\x42\x69\x63\x8a\xfe\x3a\xf8\x7d\x7e\x8e\xa5\xeb\x9e\x86\xc5\x2c\x8a\xd9\x93\x3b\x56\x6e\x45\xcc\x12\xf2\x75\x64\x99\x1e\x98\x2f\x26\xd0\x01\x5b\xd2\xdd\x1f\x1e\xec\x43\x96\xcf\x70\x44\xa5\x33\x5e\xbe\xff\x5f\xfe\x2b\x0d\x51\xd4\xe8\x5d\x2c\x62\x61\xdf\xf7\xf4\x53\xa9\x66\x4c\x2e\x96\x61\x78\x0f\x5d\x2a\x17\xaa\x1a\x49\x4c\x88\x95\xbc\x72\xbd\x3b\x3a\x91\xc9\x71\xd1\xc8\x59\x76\xe6\x26\xe8\x26\x16\x7d\xc8\xaf\x3a\x74\xdd\x27\x50\x0e\x0c\x32\x71\x4b\x01\x32\x2b\xa0\xf7\x24\x02\x99\xf3\x26\xd0\x21\x66\x0a\x30\x63\x95\xe7\x65\x7d\xe2\x16\x5c\xa9\x3c\xc7\x40\xd5\x9c\xc6\x26\x0f\xe0\xa4\x5a\xc4\x9a\xeb\xd4\xf6\xfd\xf2\x71\x23\xb3\x8a\x56\x2c\xae\xa0\xc8\x99\x6b\x18\x86\x6f\xab\x66\xf6\x63\xfb\xb1\xfd\xc7\x86\x56\xd0\x45\x5d\x5b\xce\x94\xcc\x0b\xe1\xa7\x89\x33\xd6\x88\x63\xa2\xdb\xb6\x57\x4d\x45\x92\xb9\xed\xd6\x60\xba\x26\x6a\x9c\xc9\x2d\xff\xfe\xfd\x0e\xde\x07\xde\xaf\xf3\x7d\xd4\xaf\x00\x00\x00\xff\xff\x46\x6c\xcb\x65\x77\x03\x00\x00")

func directorExternalIpYmlBytes() ([]byte, error) {
	return bindataRead(
		_directorExternalIpYml,
		"director/external-ip.yml",
	)
}

func directorExternalIpYml() (*asset, error) {
	bytes, err := directorExternalIpYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "director/external-ip.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _directorManifestYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x5f\x6f\xdb\x36\x10\x7f\xd7\xa7\x20\x3a\xa0\xb5\x8b\xda\x4e\xdc\x24\xeb\xf4\xb4\xef\x51\x14\x04\x4d\x5e\x2d\xae\x12\x49\xf0\x28\x65\x59\x91\xef\x3e\x90\x96\x28\x4a\xa2\x1d\x67\xcd\xc3\xda\x07\x57\x77\xc7\xe3\xef\xfe\x1f\xab\x58\x03\x25\x39\x68\xac\x8a\xc2\x42\x0d\x0c\x01\xcb\x62\x43\x12\x3a\x21\x1d\x58\x94\x5a\x95\x64\xb5\xf2\x14\xda\x7f\xaf\xd7\x05\x21\xad\xad\x23\xbd\xb5\x75\xa0\x61\xc5\x6e\x23\xd1\x7f\xac\xd7\xa3\x4a\xd3\xcc\x34\x9a\x26\xab\xd0\x34\x4b\x7d\xa6\x19\xd4\x15\x16\x50\xb7\x96\x03\x35\x5a\xd7\x09\xe4\xae\xc1\x82\x10\x05\xee\x51\xdb\x1f\x25\x11\xf0\x9d\xb5\xb5\x2b\x08\x01\xd5\x95\x05\x21\x24\x18\x75\xfa\x17\x21\x86\x21\x3e\x6a\x2b\x4a\xf2\xe1\xe3\x87\x9e\xd6\x1c\x5a\x1c\xf8\x84\x70\xb0\xce\xdf\xed\xa9\xf4\xa0\xb5\x43\x67\x99\xa1\x88\x1e\x5a\x21\x24\xfe\x98\x23\xf0\x34\x8f\x21\xf0\x50\xfe\x03\x25\x79\xb8\xa7\xf7\x9f\x1f\x8a\xa2\x87\x95\x0a\x47\x7c\xee\xc9\x40\x49\x1a\xa6\x5a\x56\x7b\x9b\xdb\x83\x02\x17\x80\x6c\x88\x65\xea\x08\x1e\x85\x54\x0e\xac\x62\x35\xe5\x52\xd8\xe0\x1b\x42\x8e\xcc\xc1\x23\x7b\x9a\xb0\x8f\x8f\x3d\x13\x1d\x73\x92\x97\xe4\x6b\xc2\x94\x66\xbd\xfe\x16\xb8\x42\x61\x49\xbe\x7e\xd9\x86\xbf\xdf\x8a\x42\x2a\x74\x4c\x71\xa0\x47\xab\x5b\xb3\x4c\x84\x81\x8f\x25\xb9\x2d\x08\xf9\x4b\x1f\x7a\x80\x3f\x63\x70\x3f\x91\x3e\x8d\xc2\xd7\x73\xca\x55\xcc\x61\xca\xd6\x58\x4d\xf8\x46\xa3\x3b\x5a\xc0\xcd\x1f\xdb\xbb\x4b\x72\x87\x5a\x1f\xd0\x69\x0b\x97\x84\x84\xb4\xc0\x9d\xb6\x97\x64\x2a\x60\xb5\xab\x68\xa3\x95\xcc\x4b\x4e\x92\x6c\xc8\x2d\xe3\x93\x15\x1d\x28\x47\x63\xf8\xc7\xa8\x8f\x21\xf6\x17\xcd\x83\x3c\x04\x84\x4a\x83\xf9\xa0\x18\xab\x0d\x58\x27\xa1\xcf\x41\x76\x04\xe5\xca\x34\x35\x83\x1f\xcb\xdd\x2e\xfc\xac\x56\xfe\x87\x0e\x79\xbc\x5e\xff\x39\xd3\x59\xde\xed\xf7\xfb\xfe\x78\x2c\x81\x79\x19\x84\xef\xc1\xab\x98\x52\x37\x1e\x50\x27\x05\xd8\x92\x08\xd6\x25\x1c\x42\xb4\x71\x52\xab\x89\xb8\xff\xf3\x1b\x71\x5a\x68\x82\x8f\xd2\xf1\x8a\x38\x4d\x5a\x94\xea\x48\x2a\xe7\x0c\xce\x44\x41\x09\xa3\xa5\x72\x65\xe0\x96\xbb\xdd\x1c\xfc\xfe\x7e\x7f\x7f\x33\x3b\xd4\xa2\x07\x13\xfc\x32\xe3\x8c\xd5\xbc\x5a\x45\x73\x68\x90\x4c\x3c\x34\x3b\xe4\xea\x85\x05\x7d\xd5\x2f\xa8\x84\x70\x36\xd5\xcd\xd9\xd6\x8b\xca\xef\x92\x33\x07\xbd\xee\x10\x98\xfe\x30\x13\xc2\x02\xe2\xa4\x38\xbd\x65\x45\x6a\x8b\x3f\xb0\x68\x48\x8b\xc8\x16\x19\xbc\x27\x3c\x41\x10\xc1\x76\x60\xa9\xab\x71\xcb\x59\x62\x25\xaf\xa5\xb7\x9f\xb3\xd4\x9e\x04\x74\x54\x90\xb5\xa5\x47\x65\x65\xc7\x1c\xd0\x1f\xf0\x94\x8a\x27\xe4\x44\xfc\x04\xe4\xa5\xdb\x52\xb8\xaf\xb8\x35\x39\x96\xbf\x7d\xa8\xfb\x17\xad\x0d\x6e\x41\x3a\xc8\xbf\x1a\x49\x56\x41\x1e\xd3\xb4\xcf\x5c\x8b\x6c\x7a\xea\x3f\xe3\xcb\xa8\x59\xa2\x1c\x5a\x6f\x49\xde\x8b\x43\xaf\xb8\x0e\x4d\x8e\xc6\x0c\xbe\xdd\xff\xbe\xbd\xd9\xde\x6c\x6f\x7b\x7e\xa5\xd1\x2d\xa9\xa7\x8c\x1e\xf4\x65\xb2\x7a\x60\x2d\x33\x5b\x30\xc7\x0e\xb1\xff\xc6\x02\x62\xc6\x2d\x54\xc6\x0a\xbc\xb2\xce\x8c\xf6\x53\x3c\xed\x26\xb9\xb6\xb6\xcc\x9d\x93\x35\x03\x3d\x92\xf3\x8d\x26\x66\xc2\xc2\xb2\x49\x13\xcf\x77\xb0\x57\xf5\xae\x69\x0f\x98\xf5\xaa\xab\x7a\x54\x36\xfd\xc6\x33\xaf\xaf\xce\xec\xd9\x65\xa2\xcd\x5d\x7c\x36\xbb\x4e\x93\x73\xb5\x8a\x4e\xf5\x84\x31\x55\x0e\x25\xf9\x18\x33\xf5\x7b\xdd\x62\x45\x99\x35\x25\x71\xb6\x85\x38\xed\xd8\xa1\xf6\xa3\x1b\x1d\x15\x60\x6a\xfd\x34\x61\x1f\x41\x81\xf5\xe0\xba\x26\x3a\x18\x73\x0a\x04\x88\x60\xbd\xa0\x7e\x76\xb7\x48\xfd\x7c\xf7\x01\x5c\x8a\x86\xc2\x13\x50\xcb\x0e\x2c\x08\xea\xa0\x31\x35\x73\x30\x55\x7b\x3a\x8e\x25\xb9\x1b\x0a\x4d\x73\x56\x53\x91\x4e\xd2\x93\x3e\x31\xbd\xa3\xf3\xf5\x3c\xca\x58\xe0\xda\x0a\xda\x93\x53\x49\xc4\x7a\x14\xeb\xe3\x13\xfd\x88\x58\x9f\x69\x53\xc3\xaa\x3b\x11\xcd\x85\xdf\xe7\x2f\x6d\x98\x62\x47\x68\x26\x89\x3d\x16\x55\xb0\x29\xd2\xc3\x57\x9a\xa3\x5e\xc3\x6c\xcf\x38\x05\x9c\x89\x46\xaa\xc9\xe0\x4d\x0b\x23\x70\xf3\xa3\x7c\x50\x50\x35\x67\x4f\x57\xcd\xfc\x68\xd5\x94\xb3\xd2\xa7\x8c\x73\xdd\x2e\x8b\x35\x51\x7b\x59\x65\x70\x24\xa3\x79\x5f\x8e\x73\xd9\x02\xb6\xb6\x67\x2d\x83\xad\x9c\x29\xc9\x7b\xe5\x4c\x71\x32\xcd\xc9\x06\x6e\xb7\x47\xad\x8f\x35\x6c\xb9\x6e\x12\xf2\x3e\x4f\xfe\x9c\x27\xdf\xa5\xe4\x82\xd7\xba\x15\x34\x06\xad\x18\x16\xcc\xb0\xaa\x95\xbb\x5d\xf8\x5a\x3c\x7d\x2e\xec\x9a\x0f\x5f\x1e\xbe\x14\x2f\xbc\x99\xce\xad\xb8\xe4\xe7\xe9\xf2\x77\x57\xdf\x7e\x13\x1a\xc6\x4d\xb8\xf5\xdd\xf3\x6c\x2e\x90\x9f\xb3\x64\xfc\x44\x0c\x73\x55\x49\x76\x1d\xb3\xbb\x8e\x33\xb3\x6b\x24\xb7\x9a\xfa\x59\xb3\xf3\xa3\x67\xc7\x19\xaf\xe0\x79\x0c\xc0\x47\x1f\x80\xa2\x63\x56\xfa\xf8\x24\xaf\xa1\x69\x1a\xc6\xb7\x5b\x24\xc4\x57\xd3\xf9\xd1\x70\xcd\xa1\x69\xf3\x3f\x7f\x22\x49\xc2\xf3\x42\x67\xdc\x78\xfe\xc0\x64\xfb\x3c\x2f\xb6\x18\xe7\x4b\xd1\xf9\x63\x97\x72\x16\x85\x92\xf6\x52\xcc\x5e\x14\xd2\xef\x98\x49\x51\x70\xdd\x34\x5a\xd1\x93\x2a\xce\x8a\x73\xa6\x21\xd6\xd7\xa8\xf7\xba\x27\x80\x66\x37\xe4\x16\x09\x56\x07\x8a\x93\x1d\x04\xa9\xec\x1b\x2e\xf9\x8f\x80\xb1\xf6\xff\x1f\x88\xfa\xc5\xfd\x97\xbd\xdf\xa3\xdc\x7a\x7d\x1b\xce\xb6\xbe\x86\x36\xc3\xa5\xb3\xeb\xc6\x75\xe0\x5a\x1f\x8c\x28\x2f\x5c\x3b\xbb\xf3\x6a\x5f\x84\x49\xfa\xb7\x03\x25\x40\xf8\xf9\x47\x5b\x64\xc7\x7e\x8d\xdc\xf4\x6f\x17\xca\x5a\x57\xcd\xbd\x96\x59\xf7\xdf\xcc\xa0\x41\x69\xc6\xa8\xf3\x58\xfb\x87\xdd\x05\xac\xcb\xd5\xff\xcd\x10\x57\xcd\xaf\x63\x4d\x57\xd4\x37\x4b\xc9\xa8\xf4\x42\x5e\xe6\x76\xd5\x6b\x3d\x33\x03\xfd\x56\x25\xfa\x6f\x00\x00\x00\xff\xff\x8f\xe1\x2b\x39\x88\x15\x00\x00")

func directorManifestYmlBytes() ([]byte, error) {
	return bindataRead(
		_directorManifestYml,
		"director/manifest.yml",
	)
}

func directorManifestYml() (*asset, error) {
	bytes, err := directorManifestYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "director/manifest.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _directorVersionsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x5d\x6f\xdb\x36\x18\x85\xef\xf3\x2b\x04\x5f\x97\x14\x29\xf1\x43\x0c\x10\x04\x18\x30\xb4\xc5\xba\x15\xc1\xb0\x74\xdb\x8d\x41\xf1\xc3\xe2\x40\x89\x8a\x28\x59\x4e\x86\xfe\xf7\x41\xb6\x15\xb9\x6e\x1a\x14\xf5\xee\x04\xbe\xe2\x79\x0f\x9e\x73\xf8\xef\x55\x92\xac\xca\x10\xab\xd5\x75\x32\x7d\x27\xc9\x6a\xe8\xfc\xea\x3a\x59\x55\x7d\xdf\xc6\xeb\x34\x8d\x39\x94\xb5\x7c\x0a\x8d\x1c\x23\x54\xa1\x4e\xa7\xbf\x81\x0a\x75\xeb\xbc\xd1\xa0\x33\xde\xc8\x68\x40\x2f\xbb\x52\x7a\x1f\x0f\xe3\x8c\x15\x10\x41\x0c\x86\x72\x68\xfa\x01\xec\x4c\xe3\xa4\x07\x82\x43\xcc\x40\x86\x70\x81\x04\xce\x01\x66\x84\x22\x0a\x44\xc6\x72\x44\x09\xa1\xcf\x93\xfd\x40\xc0\x7e\xf3\x74\xbb\x35\x5d\x74\xa1\x79\xaf\x6f\x3c\xb4\xeb\xbf\xef\x7e\xbf\xff\xd4\x57\xed\xdd\x08\x3f\x32\xf6\xcb\x87\xb7\x71\xd3\xc7\x7f\xdc\x4f\xf7\x9f\xe4\xbb\xd5\x9b\x83\xfd\x58\x49\x3c\xf9\x57\x14\x9b\x8c\x21\x5c\x90\xb2\xc0\x65\xae\x0a\xc2\x2c\xe6\xa8\xc4\x96\x8b\x92\x1a\x8d\x0c\xca\x99\xc9\xe5\x7c\xef\xb8\x69\xba\x7a\x74\xbf\xba\x4a\x92\xcf\x6f\x66\x40\x40\x79\xb7\x40\x1a\x5d\xa3\xc3\x18\xbf\x03\x94\x77\x40\x76\xbd\xb3\x52\xf5\x71\x39\xa2\x7b\x3c\x47\x15\x20\x6b\xcd\x08\x34\x3b\x33\x9b\xa9\xa5\xba\x50\x5a\xcb\x6e\x74\xcd\x41\x79\x56\xf5\xae\x19\x76\x17\xea\xee\x35\x8e\xb2\x0b\x9f\xb6\xfe\xff\xfa\xd3\xd6\x00\x41\x9c\xc1\xfc\x85\xf6\xf0\xb9\x23\x02\xe0\x22\x17\x88\x00\x8a\x0a\xc6\x98\x10\xc5\xf3\x64\x1a\x60\x74\xd6\x9e\xb6\x7b\xf7\xf3\xfd\x07\xf2\x64\xf4\x1d\xfc\x6d\xf7\xeb\x9f\xe5\xfb\x8f\x7f\xbc\xf5\xe3\x03\xab\x9c\x96\x0f\x7f\x3d\x9c\xb7\xc7\x52\xae\xa8\x40\x8c\x21\x5b\x22\x24\x29\x35\x59\x6e\xa5\x90\x82\x52\xc3\x85\xce\x85\xb1\x19\xd6\xf8\xa5\xf6\x1c\xcc\x2f\x70\x54\xeb\xbe\x09\x67\x62\x01\x5d\x48\x75\xba\x71\x7d\x35\x94\x7b\x40\xca\x87\x41\xdb\x30\x34\xba\x7b\x04\xae\x51\x43\x29\xfb\xd0\x1d\xb8\xc9\x31\x02\xd5\xba\x19\xdb\xed\xf6\x86\x67\xe7\xde\x4b\x2e\x84\x30\x82\x62\x4c\xcb\x92\x09\x2c\x59\x8e\x14\xe2\x16\x91\xc9\x36\x2d\x29\xe7\x45\x41\x54\xf6\x82\x77\x9e\x2d\xbe\xad\x7f\x7c\xb5\xef\xa7\x8e\x43\xa3\xc2\xd0\x45\x73\xf2\x75\x74\x18\x53\x1d\xc6\xc6\x07\xa9\xd3\x2d\x81\x19\xc4\xa9\xf5\x8f\xeb\xa3\xdc\xfa\x8b\x7a\x9e\x95\xfe\x12\xfd\x43\xfb\xd7\xaf\xb7\xff\x92\x05\x7b\xb1\xf5\xd9\x33\x88\xbd\xa9\x95\xf1\xfe\x3b\xe2\x9e\x7f\x8d\x4b\xac\x3b\xd3\x80\x6a\x5b\x9f\xb5\x7e\x13\xd6\x72\x63\x9a\xfe\x76\x7b\x33\x3d\x80\xaf\xc2\x26\x18\x61\x62\x15\xc9\x05\xe7\x48\x32\x4b\x50\xae\xad\xb4\x4c\xb0\x5c\xa2\x9c\x20\xa4\x09\xc7\x44\xe8\x17\xc2\x5e\x8c\xf7\xa6\xeb\xa4\x0d\x5d\xfd\x6a\xe0\x33\x10\x58\xc9\x58\x39\x15\xba\x76\xcf\xee\xf9\x72\x8a\x20\xc6\x90\x2f\x07\xeb\xc3\xc1\x97\x69\xc3\x27\xd7\x7e\x23\xf1\x1f\x5e\x70\x1a\xf7\xa9\xfe\x57\x91\xff\xf0\x86\x93\xbc\xf7\x0b\x26\x74\x57\x9f\xaf\xfe\x0b\x00\x00\xff\xff\xb7\xc8\x3e\xeb\x3f\x07\x00\x00")

func directorVersionsJsonBytes() ([]byte, error) {
	return bindataRead(
		_directorVersionsJson,
		"director-versions.json",
	)
}

func directorVersionsJson() (*asset, error) {
	bytes, err := directorVersionsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "director-versions.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _manifestYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\x4b\x6f\xe3\x38\x12\xbe\xfb\x57\x10\xb9\x74\xb2\x88\x6c\xa7\x3b\xaf\x15\x30\x87\x45\xef\x6d\x31\x40\x03\x7b\x19\x20\x08\x84\x32\x55\x96\x99\xa6\x48\x0d\x49\xd9\x71\x1a\xfd\xdf\x17\xa4\x28\x89\xd4\xc3\x71\xcf\x74\x1f\x56\x27\x9b\xfc\x58\x2c\x16\xeb\x4d\x01\x25\xa6\xe4\xf2\x32\xc7\x8a\xcb\x63\x89\xc2\x64\x76\xe8\xea\x6a\xb1\xd8\x83\x62\xb0\xe1\xa8\xd3\x45\x42\x1a\x1c\x55\x98\xef\xea\x4d\x82\x82\xaa\x63\x65\x98\x14\x49\x05\x5a\x1f\xa4\xca\x17\x84\x98\x63\x85\x29\x09\x06\xa4\x83\xe8\x94\x7c\xe3\x28\x0a\xb3\x4b\xc9\xed\xfa\x7b\x47\x0c\x0c\xcd\x7a\x42\xd9\x57\x3c\x9e\x47\xe3\xd3\xc7\x9e\x46\x0d\x90\xbc\x1c\x4c\xb7\x50\x69\x88\xd6\x7c\xc5\x63\xd6\xef\xfd\xcf\xfb\x78\x65\xad\x51\xe9\x04\xf2\x92\x89\xf1\xd6\x21\xf0\x0c\x08\x97\xc5\x3b\x90\x8c\x72\x86\xc2\xe8\xcc\x1e\xdc\xc8\xcc\x0b\x73\x7e\x8d\x07\xd8\x75\xd9\xbc\x98\x87\x68\xc7\xab\xdf\x2b\xd3\x48\x15\x9a\xd3\x9c\xdb\xc1\x6a\xa7\x40\xe3\x3c\xce\xb2\xfc\x3e\x0b\x4c\x6c\x79\xfd\x9a\x6f\xce\x80\x16\x0a\xb6\x20\xe0\x0c\xa4\x91\x5f\x51\x64\x9a\x15\x82\x89\x22\xd2\x12\x7b\xd9\x1d\x4a\x43\xb6\x93\xda\x44\x00\xad\x77\x1d\xe0\x20\xd5\x57\x54\xb3\xd3\x34\xd4\x9b\x05\x21\x84\x50\x59\x96\x52\x64\xcd\xf4\x67\x29\xa8\xac\x95\xc6\xcf\xff\x72\x93\x4c\x67\x14\x52\x62\x54\xdd\x0b\x8d\xa2\x32\x6c\xcb\x28\x18\x0c\x24\x62\x50\x09\xe0\x99\xe1\x7a\x12\x38\xdc\x14\x3c\x2b\x83\xfd\x2f\x2f\x73\x59\x02\x13\x57\x57\x6e\x0e\xb8\x23\x6b\xd8\x1e\x1d\xc0\xaf\x4e\x86\xb8\x84\xdc\x7c\x7c\x58\xae\x97\xeb\xe5\x4d\xc7\x12\xbe\xfe\x74\x96\x16\x0a\x39\x82\x8e\x3c\x45\x2b\xb0\x05\x21\x7b\x54\x9a\x49\x91\x12\x0e\x06\xb5\xe9\x75\x00\x54\x8e\x22\x51\xb5\xa0\x27\x50\x8a\x61\x09\x42\x9c\xa2\xd3\xe8\xd2\x09\x44\xab\x98\x27\x20\xbd\x35\xce\x21\x6a\x98\xda\x62\xa1\x0d\x96\x14\x39\x77\x87\x07\xce\x40\xa7\xe4\x15\x05\x03\x6e\x25\xa9\x53\x52\x6f\x6a\x61\xea\xa4\x1b\x1b\x51\x30\x50\x38\x59\x77\x32\x4b\xea\x2a\xa9\x94\x7c\x41\x6a\xac\x9c\xfd\x4f\x77\xa7\x11\x86\xca\xb2\x92\x02\x85\x09\xe5\xbd\x60\x42\x1b\x10\x14\xb3\x42\xc9\xba\x0a\xee\xe4\x80\xf6\x78\xf0\xa6\x53\xf2\xf4\x76\xf3\xbc\x20\xa4\x85\xea\x94\xdc\x2c\x08\x11\x68\xac\x99\x38\x66\xda\x45\x97\x97\x07\xdc\x64\x7e\xa6\x8d\x0d\x56\x19\x72\xdc\x42\xcd\x4d\x4a\x9e\x72\xa1\xaf\x49\x01\x06\x0f\x70\xb4\x54\x5b\x89\x04\x72\xd8\x97\x59\xa3\x68\x0d\x39\xff\xd7\x51\x7a\x91\x9b\x68\x43\x30\xd4\xd1\xf7\x3a\x15\xab\x12\x21\x95\x92\x95\x55\xd6\x56\xe7\x09\x89\x63\x88\xdd\x62\x1c\x59\x3c\xcf\xd6\x72\xb8\x3c\x64\x1a\xf9\xd6\xb9\x14\xcc\xb3\x40\xf5\x75\x67\xd1\x0e\x9a\xe7\x19\x97\x14\x78\xe6\xe2\x44\x4a\x9e\x3e\x38\xdf\x9a\x36\x1b\xb4\x8e\xea\xea\xea\xc3\xb3\x5f\x61\xcd\x21\x33\x08\x65\xcb\x1a\x21\x50\x9b\x5d\xff\x8f\x10\x47\x30\x1c\x20\xa4\xa5\xee\x88\xb7\xa4\x36\x4c\xe4\x59\x25\x95\x49\xc9\xe3\xda\x8f\x79\x15\xed\x57\x7b\x27\xcf\xf2\xc6\x41\x47\x31\x25\x42\x34\x61\xc0\x8a\x66\x3e\x0e\x75\x22\x22\xc4\x70\x1d\xb2\x48\xc1\x09\x29\xe6\x3a\x10\x9b\xa5\x1b\x3a\xba\x25\x85\x80\x58\xad\x78\x4a\x76\xc6\x54\x3a\x5d\xad\x7a\xa7\x91\x3e\x3e\xde\xde\xb6\x37\xd8\xba\xa4\x19\xac\x87\xb5\x56\xdc\x33\x92\x83\x81\x8d\x53\x92\xde\x4b\x34\x5f\x7b\x3b\x0d\x6f\x83\xb0\x34\xc5\x5d\xba\x5a\xb9\xbb\xb1\x41\x24\x7d\x5c\x3f\xde\x2f\xc2\xfb\xf1\xaa\xe9\xd3\x80\xe6\x22\x8b\x8c\xe3\x1e\x79\x4a\x72\xdc\xd4\x85\x1f\xae\xa4\x36\x85\x42\xfd\x67\x70\xc9\xad\xfc\xac\x29\xfb\xe9\xcc\x8f\x05\x9c\xf4\x67\x69\x2d\xc0\x7e\x8e\x9d\x70\xa1\x1d\x08\x56\x35\x2a\x12\xcc\xdb\x81\x60\x5e\x49\x8e\xe1\xc5\xb5\x46\xdd\xe1\x2d\x20\xc0\xc7\x92\xeb\xa9\x8e\x25\xa7\x35\x2f\x65\x8e\xa9\xf5\x67\x6c\x7b\x4c\x7c\x8c\x70\xda\xd3\x9d\x37\x0c\x36\xcb\x40\x65\x3a\x3a\x16\xec\xad\x36\xc2\x56\x8a\xed\xc1\x60\x64\xbb\x16\x1b\xd8\xc5\xed\xed\xa7\x76\x62\x98\x22\x58\x72\xa3\x41\x47\x27\xc8\x17\x7e\xcc\xcb\x58\x43\x96\x8a\xbd\x61\x6e\x69\x75\xc3\x36\xe4\xf6\xa9\xc5\xb2\xaa\x37\x9c\xd1\x88\xeb\x36\x2b\x71\x3c\x05\x59\x4a\x07\x98\xd1\xa4\xbf\x70\xa8\x20\xcc\x05\x27\x8b\x46\xc7\x07\xfb\x25\x56\xa5\x51\xf5\xe6\x32\x8e\xe4\x01\x77\xe1\xe0\x98\x39\x3f\xdb\xf3\x36\xe6\xf6\x14\xbf\xad\xfd\xf4\x59\xd0\xb4\x9e\x9f\x3a\x4b\x6b\x63\x91\x4f\x98\xf2\x0a\x83\x63\x26\x58\x32\x63\x50\xfd\x85\xe3\x66\x7e\x69\xba\x78\xef\x18\x0d\x6b\x77\x77\x77\x77\x01\x03\x7d\x3e\x14\x6c\x1c\x0e\x8e\x37\xf6\xb3\x41\xdc\x72\x55\x44\x28\xa3\x61\xc6\x1e\x88\xa8\x01\x4f\xfb\x49\x7b\x3d\x7a\xb7\x91\xa0\xf2\x20\xa8\xb4\xac\x7e\x8e\xac\xae\xf9\xa8\x14\xc6\xe5\x34\xfd\x9e\x1d\x89\x81\xbf\xd4\xb2\x56\x14\xa7\x74\x21\x1b\xab\xdc\x00\xd0\xe4\x23\x91\x71\x34\xdf\x84\x2d\xfd\xa8\xc6\x9c\x11\x55\x86\x46\xd2\x7c\x9c\x69\x83\xc2\x3b\xb8\x4f\xeb\xf5\x3a\x70\xe4\xd2\xcc\xc5\xc7\xd4\x22\x57\xa1\x67\x8e\xc2\xf7\xb9\xbe\xd8\x7e\xe7\xf8\xe2\x38\x21\x0e\x74\xac\x1d\x38\x95\xa3\xf5\x9c\xc5\x19\x5a\x94\x71\x24\x84\xc3\xc6\x3a\xc4\x0f\x71\x81\xfa\x21\x4a\x41\xfa\x71\x9f\xd9\x04\xc8\x50\x3b\xa9\xab\x93\x5c\x2b\xe0\x24\xd5\x1a\x02\x03\x98\x4d\x5b\xfa\xb0\x63\x23\xbb\x01\xce\x04\x64\xb2\x32\x3a\x25\xc9\xbf\x5f\x60\x0f\x4b\x8d\xb4\x56\xcc\x1c\x97\x58\xe4\xbf\x6d\x19\xc7\x74\x95\xe3\x7e\xb5\x5c\xd5\x0a\x44\x2e\x4b\x92\xfc\x51\xbe\x3e\xdc\x3f\xda\x1f\x7f\xa4\xbf\xc3\xeb\xef\x68\x40\x57\x40\xf1\xbf\xec\x0d\x7f\xfb\x78\x77\x5f\xf6\x77\x49\x59\x99\x0e\x94\x66\x20\xaa\x29\x9b\x1b\xaa\xeb\xa0\xdb\x11\x5d\xb9\xb5\xfe\xa6\x50\x08\xc7\x12\xb7\xf5\xf2\xa0\x98\xc1\xa9\x09\x85\x90\x0f\xc6\x37\x52\xef\x96\x63\x3e\x92\x36\x71\x9d\x5a\xd3\x4e\x0d\xf7\x19\x76\x9c\x28\x67\xb3\x87\x9b\xea\x93\x9c\x75\xc2\x1f\xe6\xcb\x67\xce\x91\x75\xf5\x9b\xc7\xe4\xe5\x1e\x95\x62\x36\x41\x0a\x6a\x8a\xe6\xeb\x73\x89\xa4\x50\x20\x4c\x62\x7d\x91\xee\x7b\x1f\xd7\x0a\xb7\x0a\xf5\x2e\x73\xe1\x3e\x5a\xaa\xa9\xac\x7a\xb1\x38\xce\xaf\xe7\x64\xd8\x6d\xe4\x2c\xd1\xaa\xf7\x52\x48\x31\x40\x50\x8a\x5a\x27\x6e\xa3\x64\x0f\x9c\xe5\xcc\x1c\xad\xeb\x89\x50\x9e\x9f\x31\xec\x7e\x1d\x03\xdb\x42\xe3\xe2\x62\x42\x44\x4d\xf5\xf4\x77\x85\xe4\x4b\x1a\x4b\x14\x85\x61\xe0\xba\x18\x23\x01\x45\x0c\x0c\x04\x71\xae\xf0\x7e\x8d\x68\x7a\x7d\x9d\xe8\xd4\x45\x6a\x1b\xd7\x67\xff\xff\x82\x9b\x97\xc8\x59\x55\x69\xa3\x3e\xe4\xdb\x54\x4d\xdb\xba\xb5\xef\x7d\x24\x95\xc5\x3c\xda\x4d\x86\xe8\x37\x29\xec\x01\xbf\xb5\x65\x6c\x4a\xbe\xd9\x90\xdd\xf4\xd6\xc8\xd3\xf3\xf7\xef\x61\x74\xfd\x7c\xaa\xf6\x9d\x0c\xac\x5a\xf3\x2f\x4d\x14\xfd\x4f\x13\x60\xa3\x35\x53\xc5\x0e\x21\x2f\x87\xa8\xe4\x56\xb8\x97\x14\x36\x7c\x7c\xe5\x95\xe4\x8c\x1e\xd3\xc1\x1d\x74\x41\x8f\xe5\xa9\x0d\xeb\xc9\x4d\x04\x18\x86\x5c\x3f\x96\xdc\x0c\x07\x09\xf1\xe5\x86\xe7\xdc\xb7\xdc\x27\x99\xae\x01\xc2\xd4\x1c\xf2\x5c\xa1\xd6\x7f\xa7\x7e\xcd\x37\x99\xa6\x3b\xb4\xa1\xa0\x2f\xad\xbb\x59\x5b\x11\xa2\xb0\x42\xc9\x07\x52\x69\xd3\xbc\x28\xe7\x34\x50\xf4\x49\x4a\xf3\xc5\x99\x0c\xf1\x15\xf3\x78\xd5\x30\xac\xfd\xac\x3a\xba\x51\xd3\x5e\x4f\xa0\x8c\x72\x37\x8d\x6a\xcf\x28\x7e\x51\x72\xcf\x72\x54\x3f\xae\x78\x23\x12\xe7\xeb\xdf\xd4\xd2\x2f\xdd\xa1\x9c\x9f\x18\x37\x4f\xc3\x8a\x3a\x18\x1c\x67\x84\x23\xaf\x66\xb8\x1e\x32\x16\x1a\xbf\x77\x6a\x10\xe7\x90\x84\x54\xa8\x4a\xa6\x75\xdf\xaf\xee\x2f\xae\x02\xb3\x4b\xc9\xea\x1f\x03\x85\x06\x6a\xa4\x6b\xb8\x5d\x58\x55\x6e\xfc\x43\x1a\x84\xf1\x8b\xeb\xa9\x09\xa7\x00\x17\xcf\x03\x5a\xf6\x54\xe0\x1f\x9b\x9e\x9c\x5b\x74\xee\xf0\x3a\x47\x8e\x06\xaf\xed\x48\x06\x94\x37\xa3\xf6\xd7\xf3\x34\x8f\x5d\xf7\xe1\x3c\x6e\x63\x1f\x79\x06\x57\x2d\x23\xcf\x91\x40\x6d\x18\xa0\x23\x89\x46\x69\x30\x39\x37\x15\xb6\x9f\xeb\x04\x79\x8a\x6d\xc7\xa2\x73\x17\xe3\xce\x88\x57\x84\xa6\x13\x66\x59\x9d\x68\x23\x3e\x47\x16\x9d\x69\x23\x15\x14\x51\xc5\xe7\x9f\x8d\xbc\x85\x4d\x56\xe8\x3f\xa3\xdd\xf5\x7e\x2b\xee\x7d\x67\x16\xb6\x2a\x86\x9d\x5a\x6b\x38\x7f\xd6\x4c\x61\xe6\x0c\x61\xe0\xe2\x5d\x4f\x0d\xde\xe9\x20\x4e\x15\x59\x63\x47\x9f\x58\x63\x74\xf6\x9c\x75\x6f\x54\x13\xa1\x63\x22\xb1\xb0\xc1\x64\x6c\xc8\xe3\xdd\xb3\x89\xe4\x7c\xea\xc9\x38\x96\x9d\x67\x6a\xb2\xb8\x19\xb2\xd8\xd6\xee\x8d\xb2\x2c\x06\x8f\x7c\xf3\x8f\x1c\x5d\xaf\x8e\xca\x5a\x34\xa2\x9b\x79\xf3\x68\x60\x3f\xf3\xd9\xa3\xa1\x78\xea\xe5\xa3\xe3\x7e\xb6\x2d\x49\xa5\xd0\x75\xd9\xcb\x7e\x03\x45\x01\x05\x52\x0e\x61\x95\xb8\x55\xb2\x6c\xa9\x25\x21\x64\xc6\x15\xe7\xca\xbd\x5b\xb0\x12\x65\x6d\x52\x72\xb3\x6e\xcb\x4f\xa3\x03\x4f\xd0\x77\x39\xd3\xa8\xe7\x19\xb5\x04\x46\xbb\x9d\xdd\x5f\x9d\xec\x82\x7a\xa5\x78\xe7\xbc\xa0\xe7\x4e\x1b\xbf\x34\xc6\x0c\xc5\xaf\x8f\x93\x4d\x31\x87\xe8\xf7\xf1\xcd\x99\x2e\xab\x59\xbb\x66\xdc\x3a\x7d\x78\x78\x78\x18\x82\xbc\xe6\xa4\xc4\xd0\x6a\xb1\xa8\xab\xdc\x86\xec\x85\xf5\x76\x02\x14\x6b\x1f\xdc\xdc\xbf\x63\x76\x00\x43\x77\xee\x02\xac\xf4\xd7\xeb\xe4\x7e\xbd\x6e\x7a\x3f\x25\xbc\x66\x4c\x64\x5b\xce\x8a\x9d\x49\x89\x75\xb7\x1a\x15\xb3\x09\xea\x16\xb8\x13\x66\x43\x7b\x96\xc6\xe2\x7f\x01\x00\x00\xff\xff\x4b\x6d\xf0\xcb\xe2\x21\x00\x00")

func manifestYmlBytes() ([]byte, error) {
	return bindataRead(
		_manifestYml,
		"manifest.yml",
	)
}

func manifestYml() (*asset, error) {
	bytes, err := manifestYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifest.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsShasJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd1\xcb\x8a\xd4\x50\x10\x06\xe0\x7d\x3f\x45\xc8\x7a\xa4\xcf\x39\xa9\x53\x17\x41\x7c\x10\x71\x51\xa9\x8b\x3d\xd0\x93\x69\xd2\x13\x51\xc4\x77\x17\x5b\x5c\x66\x33\xd9\xfe\x14\x55\x1f\xf5\x7f\x39\x0d\xc3\xaf\xd3\x30\x0c\xc3\xf8\xf6\xf3\x16\xe3\xc7\x61\x5c\xe3\x76\x55\x8b\xf1\xe9\x5f\x7c\xd3\xb7\xcb\xdf\xf8\xbc\xc6\x35\xf4\x1e\xf7\xf3\xa2\x2f\xf1\xc9\x5e\x17\x7b\xdd\xd6\x7b\x9c\xef\x17\xad\x9f\xff\x4f\x7f\xd7\xeb\xf6\xd8\xc2\x0d\x0b\x53\xab\xd8\x53\xe7\x42\x18\x93\x65\x82\x74\x4b\xee\x62\xd6\xc5\x3c\x38\x8b\x8e\xa7\x61\xf8\xfd\xf4\x5e\xc5\x37\x5d\x3d\x96\x0f\xeb\xb6\xd8\x8e\x03\xa0\x4e\x49\xd2\x59\x1a\x43\xa0\x22\x13\x80\x52\x2f\xc1\x93\x78\xaf\xd2\x69\xaa\x48\xfd\x98\x63\x7d\x8e\x17\x5d\x96\x1d\x83\x3b\x40\x2b\x04\xa8\x31\x4b\x89\xf0\x49\x8b\x70\xa4\x63\x55\xa0\x8a\x89\x62\x6a\x1e\x07\x7f\xb1\x6a\xea\xa2\x3b\x86\x50\x21\x17\x6b\x5d\xc8\x12\x09\xa8\x2b\x7a\xed\x6c\x4d\xb9\x48\x9f\x19\xbc\x44\x76\x38\x66\x78\x5e\xf2\xba\xfd\xf0\x79\x07\x81\x6d\xb6\x46\x56\x8a\xce\x06\x69\x59\x43\xb5\x0b\x03\x70\x17\xca\x19\x54\x1c\x89\x88\x8f\x21\x6c\x0d\xbf\x6c\x7b\x86\x56\xc4\x23\xac\x06\x88\xb1\x21\xaa\xab\x36\x95\x14\x73\xaf\xe9\xa4\x85\xd9\x03\xfc\x98\x61\xd3\xfd\x22\x52\x85\xb9\x4d\x55\xa4\x64\x2b\x0c\x9c\xd5\xaa\x01\x64\x69\x0c\xac\x53\x0b\x14\x6d\x8f\xfb\xa7\xaf\x7f\x02\x00\x00\xff\xff\x2f\xb6\x31\x91\xa1\x03\x00\x00")

func opsShasJsonBytes() ([]byte, error) {
	return bindataRead(
		_opsShasJson,
		"ops/shas.json",
	)
}

func opsShasJson() (*asset, error) {
	bytes, err := opsShasJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops/shas.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _opsVersionsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\xcd\x6e\xa3\x30\x14\x85\xf7\x79\x0a\x8b\x75\xaf\xf1\x1f\x36\x44\xea\x93\x8c\x66\xe1\x12\x37\x41\x32\x06\xd9\xb8\xe9\x74\xd4\x77\x1f\x11\x9a\x1f\x92\x85\xab\x91\xa8\xc8\x22\x52\x9c\xc3\x3d\x87\xef\xde\xdc\xf0\x6b\x83\xd0\xdf\x0d\x42\x08\x65\xc3\x9f\xde\x64\x5b\x94\x79\xd3\x5b\x5d\x9b\xec\x69\x3a\xee\xf5\x70\x18\x8f\xf3\x30\x98\xb6\x36\xd6\x86\x5c\xdb\x46\x87\xe7\x77\xe3\x1a\x6d\xf3\x37\xe3\x43\xd3\xb9\xb3\xfc\x4d\xdb\x78\x2a\x53\x29\x4c\x55\xb6\x41\xe8\xf3\xe9\xfb\x1e\xde\x58\xa3\x83\x09\xb9\xd3\xad\x79\xae\x3b\x57\x77\xd1\x07\x73\x5f\x7c\xaa\x86\x50\x36\xca\xc6\x0b\xef\x95\xa3\xf6\x2b\xd7\x16\x65\x02\x33\x4c\xaf\xdf\x44\x6f\xc7\xd3\xc3\x30\xf4\x61\x9b\xe7\x81\x83\x89\x70\x34\x61\x00\x8a\x75\xab\x3f\x3a\xa7\x8f\x01\xd7\x5d\x9b\x5f\xca\x42\xec\xa1\xee\xda\xbe\xb1\x66\x07\xe7\x90\xe0\xcc\xf1\x46\x72\x72\x81\xf8\x12\xdd\x10\x61\x82\x03\x27\x08\xc0\x08\x2d\x49\xc5\x28\x50\xca\xca\xf1\x73\x45\xa4\x10\x8a\x53\x3c\xec\x3f\xae\xb9\xce\x80\x6f\x6e\x10\xa1\xac\x0b\x63\xd8\x59\xd9\xcb\x25\xf3\xdb\xbc\x10\x1f\x5f\x9f\x9b\xf3\xfb\xff\xf3\xdf\x6b\xbf\x33\x0e\x7c\x74\x75\xb2\x03\x8f\xda\x79\x38\x8a\xa9\xc4\x62\xa1\x26\xdc\x98\xc3\x64\x94\xea\x03\xe7\x94\x82\x50\x94\x70\xb1\xf2\x26\xf8\xc6\xb4\xda\x3d\xfc\xbe\x1e\x1a\x30\xd7\xcd\x43\x15\x0b\x71\xff\xf2\x84\x22\x8d\x5b\x10\x20\x4a\x48\x26\x85\x92\x2b\x27\xbe\xf7\xfa\x55\x3b\x9d\x1e\xf9\x99\xee\x6e\xdc\x39\x66\x98\x2c\x35\xee\x93\x31\x4c\x26\x69\xf6\x85\x02\xca\x38\xaf\xca\x42\xae\x7d\xda\x1b\xf7\x6a\xe3\xfb\xee\x25\x09\xff\x4e\x78\xb7\xf0\x17\x02\x7f\x36\x85\xf4\x7e\x11\xa4\x04\x55\x10\xc1\x15\x2d\xd7\x0e\xbd\xf6\x66\x77\x88\x69\xe6\x73\xdd\x3c\x14\xc3\x04\xb3\xa5\xfe\x63\x27\x5f\x38\x79\xa4\xc9\x73\x0a\x15\x63\xa5\x92\x8c\xaf\x7d\xd5\x44\x9d\x5e\x33\x57\xcd\x3c\x8c\x5c\x0e\x78\xd4\x1a\xe4\x37\x58\x0b\xc2\x0a\x90\x25\x2b\xa9\xac\xd8\x0f\x3d\xcd\x6c\x7e\xff\x0b\x00\x00\xff\xff\x4b\x03\xd6\xf4\xb4\x0a\x00\x00")

func opsVersionsJsonBytes() ([]byte, error) {
	return bindataRead(
		_opsVersionsJson,
		"ops/versions.json",
	)
}

func opsVersionsJson() (*asset, error) {
	bytes, err := opsVersionsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ops/versions.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"README.md": readmeMd,
	"director/aws/cpi.yml": directorAwsCpiYml,
	"director/custom-ops.yml": directorCustomOpsYml,
	"director/external-ip.yml": directorExternalIpYml,
	"director/manifest.yml": directorManifestYml,
	"director-versions.json": directorVersionsJson,
	"manifest.yml": manifestYml,
	"ops/shas.json": opsShasJson,
	"ops/versions.json": opsVersionsJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"director": &bintree{nil, map[string]*bintree{
		"aws": &bintree{nil, map[string]*bintree{
			"cpi.yml": &bintree{directorAwsCpiYml, map[string]*bintree{}},
		}},
		"custom-ops.yml": &bintree{directorCustomOpsYml, map[string]*bintree{}},
		"external-ip.yml": &bintree{directorExternalIpYml, map[string]*bintree{}},
		"manifest.yml": &bintree{directorManifestYml, map[string]*bintree{}},
	}},
	"director-versions.json": &bintree{directorVersionsJson, map[string]*bintree{}},
	"manifest.yml": &bintree{manifestYml, map[string]*bintree{}},
	"ops": &bintree{nil, map[string]*bintree{
		"shas.json": &bintree{opsShasJson, map[string]*bintree{}},
		"versions.json": &bintree{opsVersionsJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

